# Creates a TLS enabled cluster with tiered storage using a local CA in tls/ca for testing purposes
# More information about tiered storage available here: https://docs.redpanda.com/docs/manage/tiered-storage/
# !!! WARNING !!!
# If you intend to use this for a production cluster you will need to set handle_certs to false and provide your own certs
# Using our demo certificate authority for production is not recommended, and is intended only for testing and proof of concepts.
# Redpanda encourages you to integrate with your corporate certificate management setup.
# variables
# root_ca_dir: location of our demo cert authority
# handle_certs: when false, disables all activity related to our demo CA
# enable_tls: when true, adds the tls template to the /etc/redpanda/redpanda.yml file
# advertise_public_ips : causes the cluster to set a public ip on advertised_kafka_api, allowing access to the cluster from the public internet
---
- name: Provision client
  hosts: client
  vars:
    squid_acl_localnet:
      - "10.0.1.0/24"
  tasks:
    - name: Install and configure proxy on client
      ansible.builtin.include_role:
        name: mrlesmithjr.squid

## clients[0] is obviously pretty ugly, need to come up with an az friendly way to handle this
## BUT because it is in the playbook it is easy for the user to adjust to their liking at least
- name: Provision proxied private cluster
  hosts: redpanda
  vars:
    https_proxy_value: "{{ hostvars[groups['client'][0]].private_ip }}:3128"
    rpm_proxy: "{{ hostvars[groups['client'][0]].private_ip }}:3128"
    root_ca_dir: "{{ playbook_dir }}/tls/ca"
    enable_tls: true
    advertise_public_ips: true
    create_demo_certs: true
    handle_cert_install: true
    redpanda_version: latest
    ca_cert_file: "tls/ca/ca.crt"
    node_cert_file: "tls/certs/{{ansible_hostname}}/node.crt"
    create_pkg_mgr_proxy: true
    cloud_storage_credentials_source: "aws_instance_metadata"
    ansible_ssh_common_args: "-o ProxyCommand='ssh -vvv -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i /app/artifacts/testkey -W %h:%p -q {{ hostvars[groups['client'][0]].ansible_user }}@{{ hostvars[groups['client'][0]].inventory_hostname }}'"
  tasks:
    - name: Install system prereqs
      ansible.builtin.include_role:
        name: redpanda.cluster.system_setup
    - name: Install and configure CA certs for running tls
      ansible.builtin.include_role:
        name: redpanda.cluster.demo_certs
    - name: Configure sysctl
      ansible.builtin.include_role:
        name: redpanda.cluster.sysctl_setup
    - name: Install and start redpanda
      ansible.builtin.include_role:
        name: redpanda.cluster.redpanda_broker
      when: not skip_node | default(false) | bool

# Not necessary if you aren't intending to manage the cluster via rpk on a client
- name: Provision rpk and ca.crt on client
  hosts: client
  tasks:
    - name: Configure client for use with RPK
      ansible.builtin.include_role:
        name: redpanda.cluster.client_config
