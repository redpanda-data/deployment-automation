- hosts: redpanda
  tasks:

  - name: ensure /etc/redpanda exists
    file:
      path: /etc/redpanda
      state: directory

  - name: configure redpanda
    notify:
      - restart redpanda-tuner
      - restart redpanda
    vars:
      # we need to resolve existing variables using d() | bool in order to
      # coerce missing values, empty strings, etc into a boolean type
      use_public_ips: "{{ advertise_public_ips | d() | bool }}"
      enable_qdc_resolved: "{{ enable_qdc | d() | bool }}"
    shell: |
      set -e
      rpk config set cluster_id 'redpanda'
      rpk config set organization 'redpanda-test'
      rpk config set redpanda.advertised_kafka_api '{
      {% if use_public_ips %}
        address: {{ inventory_hostname }},
      {% else %}
        address: {{ hostvars[inventory_hostname].private_ip }},
      {% endif %}
        port: 9092
      }' --format yaml
      rpk config set redpanda.advertised_rpc_api '{
        address: {{ hostvars[inventory_hostname].private_ip }},
        port: 33145
      }' --format yaml
      sudo rpk mode production

      {% if enable_qdc_resolved %}
        sudo rpk config set redpanda.kafka_qdc_enable true
        sudo rpk config set redpanda.kafka_qdc_idle_depth 8
        sudo rpk config set redpanda.kafka_qdc_max_depth 32
        sudo rpk config set redpanda.kafka_qdc_max_latency_ms 4
      {% endif %}

      sudo rpk config set redpanda.rpc_server_tcp_recv_buf 65536

      {% if hostvars[groups['redpanda'][0]].id == hostvars[inventory_hostname].id %}
      sudo rpk config bootstrap \
        --id {{ hostvars[inventory_hostname].id }} \
        --self {{ hostvars[inventory_hostname].private_ip }}

      {% else %}

      sudo rpk config bootstrap \
        --id {{ hostvars[inventory_hostname].id }} \
        --self {{ hostvars[inventory_hostname].private_ip }} \
        --ips {{ groups["redpanda"] | map('extract', hostvars) | map(attribute='private_ip') | join(',') }}
      {% endif %}


  handlers:
  - name: restart redpanda-tuner
    systemd:
      name: redpanda-tuner
      state: restarted
  - name: restart redpanda
    systemd:
      name: redpanda
      state: restarted
